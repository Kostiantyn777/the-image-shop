{"version":3,"sources":["Context.js","components/Header.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","CartItem","hovered","setHovered","iconClassName","onClick","onMouseEnter","onMouseLeave","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.127b54b3.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction ContextProvider({children}) {\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n    \r\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n    \r\n    function toggleFavorite(id) {\r\n        const updatedArr = allPhotos.map(photo => {\r\n            if(photo.id === id) {\r\n                return {...photo, isFavorite: !photo.isFavorite}\r\n            }\r\n            return photo\r\n        })\r\n        \r\n        setAllPhotos(updatedArr)\r\n    }\r\n    \r\n    function addToCart(newItem) {\r\n        setCartItems(prevItems => [...prevItems, newItem])\r\n    }\r\n    \r\n    function removeFromCart(id) {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n    \r\n    function emptyCart() {\r\n        setCartItems([])\r\n    }\r\n    \r\n    return (\r\n        <Context.Provider value={{\r\n            allPhotos, \r\n            toggleFavorite, \r\n            cartItems, \r\n            addToCart, \r\n            removeFromCart, \r\n            emptyCart\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Header() {\r\n    const {cartItems} = useContext(Context)\r\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\r\n    return (\r\n        <header>\r\n            <Link to=\"/\"><h2>Pic Some</h2></Link>\r\n            <Link to=\"/cart\">\r\n                <i className={`${cartClassName} ri-fw ri-2x`}></i>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\n\r\nfunction CartItem({item}) {\r\n    const [hovered, setHovered] = useState(false)\r\n    const {removeFromCart} = useContext(Context)\r\n    \r\n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\r\n    \r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i \r\n                className={iconClassName} \r\n                onClick={() => removeFromCart(item.id)}\r\n                onMouseEnter={() => setHovered(true)}\r\n                onMouseLeave={() => setHovered(false)}\r\n            >\r\n            </i>\r\n            \r\n            <img src={item.url} width=\"130px\" />\r\n            <p>â‚¬5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport CartItem from \"../components/CartItem\"\r\n\r\nfunction Cart() {\r\n    const [buttonText, setButtonText] = useState(\"Place Order\")\r\n    const {cartItems, emptyCart} = useContext(Context)\r\n    const totalCost = 5.99 * cartItems.length\r\n    const totalCostDisplay = totalCost.toLocaleString('de-DE', { style: 'currency', currency: 'EUR' })\r\n    \r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n    \r\n    function placeOrder() {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout(() => {\r\n            console.log(\"Order placed!\")\r\n            setButtonText(\"Place Order\")\r\n            emptyCart()\r\n        }, 3000)\r\n    }\r\n    \r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\r\n            {\r\n                cartItems.length > 0 ?\r\n                <div className=\"order-button\">\r\n                    <button onClick={placeOrder}>{buttonText}</button>\r\n                </div> :\r\n                <p>You have no items in your cart.</p>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Image({className, img}) {\r\n    const [hovered, setHovered] = useState(false)\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\r\n    \r\n    function heartIcon() {\r\n        if(img.isFavorite) {\r\n            return <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-heart-line favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        }\r\n    }\r\n    \r\n    function cartIcon() {\r\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\r\n        if(alreadyInCart) {\r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`${className} image-container`}\r\n            onMouseEnter={() => setHovered(true)}\r\n            onMouseLeave={() => setHovered(false)}\r\n        >\r\n            <img src={img.url} className=\"image-grid\"/>\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image\r\n","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, {useContext} from \"react\"\r\n\r\nimport Image from \"../components/Image\"\r\nimport {Context} from \"../Context\"\r\nimport {getClass} from \"../utils\"\r\n\r\nfunction Photos() {\r\n    const {allPhotos} = useContext(Context)\r\n    \r\n    const imageElements = allPhotos.map((img, i) => (\r\n        <Image key={img.id} img={img} className={getClass(i)} />\r\n    ))\r\n    \r\n    return (\r\n        <main className=\"photos\">\r\n            {imageElements}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\n\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\n\nfunction App() {    \n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Photos />\n                </Route>\n                \n                <Route path=\"/cart\">\n                    <Cart />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ContextProvider } from \"./Context\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}